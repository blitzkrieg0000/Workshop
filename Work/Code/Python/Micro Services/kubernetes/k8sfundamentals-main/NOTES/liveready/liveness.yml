# Liveness probelar uygulamanın düzgün çalışıp çalışmadığını kontrol eden mekanizmalardır. 
# Bir pod içindeki container çalışsa bile bazen içerisinde ayağa kaldırdığımız uygulama düzgün çalışmıyor olabilir.
# bu nedenle bazı yötemler ile bunu kontrol ederiz. Bunlar "httpGet", "exec", "tcpSocket" olmak üzere liveness probe lardır.
apiVersion: v1
kind: Pod
metadata:
  labels:
    test: liveness
  name: liveness-http
spec:
  containers:
  - name: liveness
    image: k8s.gcr.io/liveness
    #container oluşturulmasının ardından başlangıç komutu olarak verilir.
    args:
    - /server
    # Burada bir web sunucunun /healthz endpointini bize cevap vermesi için açtık ve bu endpoint bize cevap veriyorsa serverın çalıştığını anlıyoruz.
    # Eğer bu endpointi "httpGet" ile 3 saniyeye bir kontrol edip 200 üstü 400 altı bir cevap dönerse sunucuya ulaşılıyor demektir. 
    # Yok eğer 400 üstü bir cevap dönerse sunucuya ulaşılamadığını veya hata olduğunu anlarız.
    livenessProbe:
      httpGet:
        path: /healthz
        port: 8080
        httpHeaders:
        - name: Custom-Header
          value: Awesome
      initialDelaySeconds: 3
      periodSeconds: 3
---
apiVersion: v1
kind: Pod
metadata:
  labels:
    test: liveness
  name: liveness-exec
spec:
  containers:
  - name: liveness
    image: k8s.gcr.io/busybox
    args:
    - /bin/sh
    - -c
    - touch /tmp/healthy; sleep 30; rm -rf /tmp/healthy; sleep 600
    
    # Container içinde ayrı bir komut çalıştırarak healtcheck yapılabilir.
    livenessProbe:
      exec:
        command:
        - cat
        - /tmp/healthy
      initialDelaySeconds: 5
      periodSeconds: 5
---
apiVersion: v1
kind: Pod
metadata:
  name: goproxy
  labels:
    app: goproxy
spec:
  containers:
  - name: goproxy
    image: k8s.gcr.io/goproxy:0.1
    ports:
    - containerPort: 8080

    # tcp soketler ile ilgili soketi kontrol ederiz.
    # Mesela mysql gibi servisler için 3306 portu kullanılır.
    # Ve bu portun yaşayıp yaşamadığını bu mekanizma ile kontrol edebiliriz.
    livenessProbe:
      tcpSocket:
        port: 8080
      initialDelaySeconds: 15
      periodSeconds: 20