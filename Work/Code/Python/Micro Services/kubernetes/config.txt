sudo kubeadm init --pod-network-cidr=192.168.0.0/16 --apiserver-advertise-address=192.168.1.100 --control-plane-endpoint=192.168.1.100

kubectl create -f https://docs.projectcalico.org/manifests/tigera-operator.yaml
kubectl create -f https://docs.projectcalico.org/manifests/custom-resources.yaml

kubectl delete -f https://docs.projectcalico.org/manifests/tigera-operator.yaml
kubectl delete -f https://docs.projectcalico.org/manifests/custom-resources.yaml

Your Kubernetes control-plane has initialized successfully!

To start using your cluster, you need to run the following as a regular user:

  sudo mkdir -p $HOME/.kube
  sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config
  sudo chown $(id -u):$(id -g) $HOME/.kube/config

Alternatively, if you are the root user, you can run:

  export KUBECONFIG=/etc/kubernetes/admin.conf

You should now deploy a pod network to the cluster.
Run "kubectl apply -f [podnetwork].yaml" with one of the options listed at:
  https://kubernetes.io/docs/concepts/cluster-administration/addons/

You can now join any number of control-plane nodes by copying certificate authorities
and service account keys on each node and then running the following as root:

  kubeadm join 192.168.1.100:6443 --token v34en2.wd0tozh8ajk5oggm \
	--discovery-token-ca-cert-hash sha256:9853be253c73f3be09de17db49abfb9c4ba18d2eb9b12edb4d2b4efae89636a1 \
	--control-plane 

Then you can join any number of worker nodes by running the following on each as root:

kubeadm join 192.168.1.100:6443 --token v34en2.wd0tozh8ajk5oggm \
	--discovery-token-ca-cert-hash sha256:9853be253c73f3be09de17db49abfb9c4ba18d2eb9b12edb4d2b4efae89636a1 
